# Simple workflow for deploying static content to GitHub Pages
name: Build

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  check:
    name: Check Versions
    runs-on: ubuntu-latest
    outputs:
      local_version: ${{ steps.get-ver.outputs.VER }}
      published_version: ${{ steps.get-ver.outputs.WEB }}
    env:
      URL: https://pipmon.com
    steps:
      - name: Get Versions
        id: get-ver
        run: |
          echo "VER=$(curl --silent 'https://raw.githubusercontent.com/${{ github.repository }}/${{ github.ref_name }}/CHANGELOG.md' | grep -oP '(?<=^## )[0-9]+\.[0-9]+.[0-9](?= \[[A-Z][a-z]{2} [1-9][0-9]?, [0-9]{4}\]\r?$)' | head -n1)" >> "${GITHUB_OUTPUT}"
          echo "WEB=$(curl '${{ env.URL }}/version')" >> "${GITHUB_OUTPUT}"
      - name: Write Versions
        run: |
          echo '**Local Version**: `${{ steps.get-ver.outputs.VER }}`' >> "${GITHUB_STEP_SUMMARY}"
          echo '**Published Version**: `${{ steps.get-ver.outputs.WEB }}`' >> "${GITHUB_STEP_SUMMARY}"
  deploy:
    name: Deploy Pages
    needs: check
    if: needs.check.outputs.local_version != needs.check.outputs.published_version
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Build Project
        run: |
          npm run setup
          npm run build
          npm run docs
      - name: Write Version
        run: |
          echo "${{ needs.check.outputs.local_version }}" > dist/version
          sed -i "s/%VERSION%/${{ needs.check.outputs.local_version }}/g" dist/*.* dist/**/*.*
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # Upload dist directory
          path: 'dist'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
